 response = HTTP::Client.get 
 "https://www.karcal.cl/Listado/Index/30188?NumPag=1"
 "https://www.karkal.cl/Listado/Index/30188?NumPag=1"
  if response.status_code == 200
    lexbor = Lexbor.new(response.body)
    pagination = lexbor.css("ul.pagination:last-child > li:not(.PagedList-skipToNext,.PagedList-skipToPrevious) > a").map(&.inner_text).to_a.size
    puts pagination
    lexbor.css(".caluga-card").each do |node|
      puts "---------------------------------------------"
      # marca
      puts node.css(".descripcion-bien > .nombre-bien:nth-child(1)").first.inner_text.downcase
      # modelo
      puts node.css(".descripcion-bien > .nombre-bien:nth-child(2)").first.inner_text.downcase
      # year
      puts node.css(".descripcion-bien > .nombre-bien:nth-child(3)").first.inner_text.downcase
      # link
      link = "https://www.karcal.cl/" + node.css("div:nth-child(1) >a:nth-child(1)").map(&.attribute_by("href")).first.to_s.downcase

      scrapy = ScrapyKarkal::GetItem.new 30188

      res = HTTP::Client.get link
      if res.status_code == 200
        item = Lexbor.new(res.body)
        item.css(".especificacion").each do |specification|
          spec_array = specification.css("span").map(&.inner_text).to_a
          case spec_array[0]
          when "Kilometraje:"
            puts "Hemos capturado el Kilometraje : "
            if spec_array[1].gsub(".", "").to_i?
              puts spec_array[1].gsub(".", "").to_i.colorize(:green)
            end
          else
          end
        end
        puts "hola a todos.........."
      end
      # link
      puts "https://www.karcal.cl" + node.css("div:nth-child(1) >a:nth-child(1)").map(&.attribute_by("href")).first.to_s
    end
  end